import networkx as nx

SINK_NODE_1 = 769
SINK_NODE_2 = 654
SINK_NODE_3 = 480
SINK_NODE_4 = 26
SINK_NODE_5 = 27
SINK_NODE_6 = 28
SINK_NODE_7 = 37
SINK_NODE_8 = 41
SINK_NODE_9 = 61
SINK_NODE_10 = 87
SINK_NODE_11 = 100
SINK_NODE_12 = 126
SINK_NODE_13 = 147
SINK_NODE_14 = 166
SINK_NODE_15 = 190
SINK_NODE_16 = 197
SINK_NODE_17 = 239
SINK_NODE_18 = 242
SINK_NODE_19 = 303
SINK_NODE_20 = 306
SINK_NODE_21 = 326
SINK_NODE_22 = 363
SINK_NODE_23 = 393
SINK_NODE_24 = 399
SINK_NODE_25 = 440
SINK_NODE_26 = 444
SINK_NODE_27 = 446
SINK_NODE_28 = 465
SINK_NODE_29 = 469
SINK_NODE_30 = 476
SINK_NODE_31 = 481
SINK_NODE_32 = 483
SINK_NODE_33 = 504
SINK_NODE_34 = 514
SINK_NODE_35 = 572
SINK_NODE_36 = 596
SINK_NODE_37 = 610
SINK_NODE_38 = 624
SINK_NODE_39 = 638
SINK_NODE_40 = 670
SINK_NODE_41 = 769
SINK_NODE_42 = 782
SINK_NODE_43 = 801
SINK_NODE_44 = 803
SINK_NODE_45 = 806
SINK_NODE_46 = 864
SINK_NODE_47 = 886
SINK_NODE_48 = 893
SINK_NODE_49 = 911
SINK_NODE_50 = 943
SINK_NODE_51 = 944
SINK_NODE_52 = 985
SINK_NODE_53 = 1004
SINK_NODE_54 = 1036
SINK_NODE_55 = 1073
SINK_NODE_56 = 1093
SINK_NODE_57 = 1095
SINK_NODE_58 = 1116
SINK_NODE_59 = 1134
SINK_NODE_60 = 1135
SINK_NODE_61 = 1143
SINK_NODE_62 = 1144
SINK_NODE_63 = 1146
SINK_NODE_64 = 1232
SINK_NODE_65 = 1367
SINK_NODE_66 = 1368
SINK_NODE_67 = 1380
SINK_NODE_68 = 1395
SINK_NODE_69 = 1443
SINK_NODE_70 = 1454
SINK_NODE_71 = 1469
SINK_NODE_72 = 1488
SINK_NODE_73 = 1744
SINK_NODE_74 = 1803
SINK_NODE_75 = 1814
SINK_NODE_76 = 1835
SINK_NODE_77 = 1836
SINK_NODE_78 = 1853


def select_nearest_sink_node(g: nx.Graph, source_node):
   
    sink_nodes = [
        SINK_NODE_1, SINK_NODE_2, SINK_NODE_3, SINK_NODE_4, SINK_NODE_5, SINK_NODE_6, SINK_NODE_7, SINK_NODE_8, SINK_NODE_9, SINK_NODE_10,
        SINK_NODE_11, SINK_NODE_12, SINK_NODE_13, SINK_NODE_14, SINK_NODE_15, SINK_NODE_16, SINK_NODE_17, SINK_NODE_18, SINK_NODE_19, SINK_NODE_20,
        SINK_NODE_21, SINK_NODE_22, SINK_NODE_23, SINK_NODE_24, SINK_NODE_25, SINK_NODE_26, SINK_NODE_27, SINK_NODE_28, SINK_NODE_29, SINK_NODE_30,
        SINK_NODE_31, SINK_NODE_32, SINK_NODE_33, SINK_NODE_34, SINK_NODE_35, SINK_NODE_36, SINK_NODE_37, SINK_NODE_38, SINK_NODE_39, SINK_NODE_40,
        SINK_NODE_41, SINK_NODE_42, SINK_NODE_43, SINK_NODE_44, SINK_NODE_45, SINK_NODE_46, SINK_NODE_47, SINK_NODE_48, SINK_NODE_49, SINK_NODE_50,
        SINK_NODE_51, SINK_NODE_52, SINK_NODE_53, SINK_NODE_54, SINK_NODE_55, SINK_NODE_56, SINK_NODE_57, SINK_NODE_58, SINK_NODE_59, SINK_NODE_60,
        SINK_NODE_61, SINK_NODE_62, SINK_NODE_63, SINK_NODE_64, SINK_NODE_65, SINK_NODE_66, SINK_NODE_67, SINK_NODE_68, SINK_NODE_69, SINK_NODE_70,
        SINK_NODE_71, SINK_NODE_72, SINK_NODE_73, SINK_NODE_74, SINK_NODE_75, SINK_NODE_76, SINK_NODE_77, SINK_NODE_78
    ]
    
    min_distance = float('inf')
    nearest_sink = None
    
    for sink_node in sink_nodes:
        try:
            distance = nx.shortest_path_length(g, source=source_node, target=sink_node, weight='length')
            if distance < min_distance:
                min_distance = distance
                nearest_sink = sink_node
        except nx.NetworkXNoPath:
            continue
    
    return nearest_sink